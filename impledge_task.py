# -*- coding: utf-8 -*-
"""Impledge Task.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vTn8e_28uBhM5EnVHuqAZrUn4pqrhJJ_
"""

import time

d = {}

def iscompoundword(word, word_set):
    if word in d:
        return d[word]

    for i in range(1, len(word)):
        pre = word[:i]
        if pre in word_set:
            suf = word[i:]
            if suf in word_set or iscompoundword(suf, word_set):
                d[word] = True
                return True

    d[word] = False
    return False

def complength(a, b):
    return len(a) > len(b)

starttime = time.time()

with open("Input_01.txt", "r") as file:
    words = file.read().splitlines()

word_set = set(words)
words.sort(key=len, reverse=True)
longcompound = ""
seclongcompound = ""

for word in words:
    if iscompoundword(word, word_set):
        if not longcompound:
            longcompound = word
        elif len(word) > len(longcompound):
            seclongcompound = longcompound
            longcompound = word
        elif not seclongcompound or len(word) > len(seclongcompound):
            seclongcompound = word

endtime = time.time()
processing_time = endtime - starttime

print("Longest Compound Word:", longcompound)
print("Second Longest Compound Word:", seclongcompound)
print("Time taken to process:", processing_time, "seconds")